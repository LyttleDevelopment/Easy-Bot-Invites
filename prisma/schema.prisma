generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

////////////////////////////////////////////////////////////////////////////////////////
// Guild Section
////////////////////////////////////////////////////////////////////////////////////////

model Guild {
  // Primary key information
  guild_id BigInt @id

  // Relations
  // - Members
  members    Member[]
  invites    Invite[]
  characters Character[]

  // Values
  announce_channel_id       BigInt?
  guild_rules_channel_id    BigInt?
  raid_rules_channel_id     BigInt?
  welcome_message_guild     String?
  welcome_message_pug_stay  String?
  welcome_message_pug_leave String?
  admin_roles               String?
  guild_roles               String?
  pug_roles                 String?

  // Date information
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  // Refactors
  @@map("guild")
}

////////////////////////////////////////////////////////////////////////////////////////
// Invite Section
////////////////////////////////////////////////////////////////////////////////////////

model Invite {
  // Primary key information
  invite_id String @id
  guild_id  BigInt

  // Relations
  guild Guild @relation(fields: [guild_id], references: [guild_id])

  // Values
  type    String?
  kick_at DateTime? @default(now())
  creator BigInt?

  // Date information
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  // Refactors
  @@map("invite")
}

////////////////////////////////////////////////////////////////////////////////////////
// Member Section
////////////////////////////////////////////////////////////////////////////////////////

model Member {
  // Primary key information
  user_id  BigInt
  guild_id BigInt

  // Relations
  guild      Guild       @relation(fields: [guild_id], references: [guild_id])
  characters Character[]

  // Values
  kick_at    DateTime?
  invite_id  String?
  is_inviter Boolean   @default(false)

  // Date information
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  // Refactors
  @@id([guild_id, user_id])
  @@unique([user_id, guild_id])
  @@map("member")
}

////////////////////////////////////////////////////////////////////////////////////////
// Character Section
////////////////////////////////////////////////////////////////////////////////////////

model Character {
  // Primary key
  id             BigInt @id @default(autoincrement())
  user_id        BigInt
  guild_id       BigInt
  character_name String

  // Character details
  class       String
  main_spec   String
  off_spec    String
  main_or_alt String

  // Relations
  guild  Guild  @relation(fields: [guild_id], references: [guild_id])
  member Member @relation(fields: [user_id, guild_id], references: [user_id, guild_id])

  // Date information
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  // Constraints
  @@unique([user_id, character_name])
  @@map("character")
}
